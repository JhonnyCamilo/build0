{"version":3,"sources":["components/paginas/Ordenes.js","components/ui/FormularioUsuario.js","components/paginas/Usuarios.js","components/paginas/Productos.js","components/paginas/NuevoProducto.js","components/paginas/NuevoUsuario.js","components/paginas/NuevaOrden.js","components/ui/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Ordenes","className","to","FormularioUsuario","usuario","id","name","Usuarios","useState","usuarios1","map","Productos","NuevoProducto","NuevoUsuario","formik","useFormik","initialValues","identificacion","nombre","cumpleaños","mescumpleaños","direccion","celular","email","password","zona","tipo","validationSchema","Yup","min","required","onSubmit","datos","console","log","handleSubmit","htmlFor","type","placeholder","value","values","onChange","handleChange","onBlur","handleBlur","touched","errors","role","NuevaOrden","precio","categoria","imagen","descripcion","Sidebar","activeClassName","exact","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9f5f9f5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Ordenes = () => {\r\n       return( \r\n        <>\r\n         <h1 className=\"text-3xl font-light mb-4\">Ordenes</h1>\r\n         <Link to=\"/nueva-orden\" className=\"  bg-blue-800 hover:bg-blue-700, inline-block mb-5 p-2 text-white uppercase font-bold\">\r\n                Agregar Orden\r\n            </Link>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Ordenes;","import React, { useContext, useRef } from 'react';\r\n\r\n\r\nconst FormularioUsuario = ({usuario}) => {\r\n\r\n    const { id,  name } = usuario;\r\n   // console.log(usuario);\r\n    return ( \r\n        <div className=\"w-full px-3 mb-4\">\r\n            <div className=\"p-5 shadow-md bg-white\">\r\n                <div className=\"lg:flex\">\r\n                    <div className=\"lg:w-5/12 xl:w-3/12\">\r\n                   \r\n\r\n                            <div className=\"sm:flex sm:-mx-2 pl-2\">\r\n                                \r\n                            </div>\r\n                            </div>\r\n                            <div className=\"lg:w-7/12 xl:w-9/12 pl-5\">\r\n                            <p className=\"font-bold text-2xl text-yellow-600 mb-4\">{name} </p>\r\n                            <p className=\"font-bold text-2xl text-yellow-600 mb-4\">{id} </p>\r\n                           \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default FormularioUsuario;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FormularioUsuario from '../ui/FormularioUsuario';\r\n\r\n\r\nconst Usuarios= () => {\r\n      // definir el state para los platillos\r\n      const [ usuarios1, guadarUsuarios ] = useState([]);\r\n\r\n    //fetch('http://localhost:8080/api/user/all')\r\n   // .then(response =>{\r\n     //   return response.json();\r\n //   })\r\n  //  .then(response =>{\r\n       // console.log(response);\r\n   //     guadarUsuarios(response);\r\n//    })\r\n    \r\n       return( \r\n        <>\r\n         <h1 className=\"text-3xl font-light mb-4\">Usuarios</h1>\r\n         <Link to=\"/nuevo-usuario\" className=\"  bg-blue-800 hover:bg-blue-700, inline-block mb-5 p-2 text-white uppercase font-bold\">\r\n                Agregar Usuario\r\n            </Link>\r\n\r\n            {usuarios1.map( usuario => (\r\n                <FormularioUsuario\r\n                    key={usuario.id}\r\n                    usuario={usuario}\r\n                />\r\n            ))}\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Usuarios;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Productos = () => {\r\n       return( \r\n         <>\r\n            <h1 className=\"text-3xl font-light mb-4\">Productos</h1>\r\n            <Link to=\"/nuevo-producto\" className=\"  bg-blue-800 hover:bg-blue-700, inline-block mb-5 p-2 text-white uppercase font-bold\">\r\n                Agregar Producto\r\n            </Link>\r\n\r\n       \r\n              \r\n         \r\n\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Productos;","import React from 'react';\r\n\r\n\r\nconst NuevoProducto = () => {\r\n       return( \r\n        <>\r\n         <h1 className=\"text-3xl font-light mb-4\">nuevo producto</h1>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default NuevoProducto;","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nconst NuevoUsuario = () => {\r\n     // validación y leer los datos del formulario\r\n     const formik = useFormik({\r\n      initialValues: {\r\n         id:'', \r\n         identificacion:'',\r\n         nombre: '',\r\n         cumpleaños: '',\r\n         mescumpleaños: '',\r\n         direccion: '',\r\n         celular: '',\r\n         email: '',\r\n         password: '',\r\n         zona: '',\r\n         tipo: '',\r\n      }, \r\n      validationSchema: Yup.object({\r\n         id: Yup.number()\r\n                  .min(1, 'Debes agregar un número')\r\n                  .required('El id es obligatorio'),\r\n         identificacion: Yup.number()\r\n                  .min(1, 'Debes agregar un número')\r\n                  .required('la identificación es obligatoria'),        \r\n         nombre: Yup.string()\r\n                      .min(3, 'Los Platillos deben tener al menos 3 caracteres')\r\n                      .required('El Nombre del platillo es obligatorio'),\r\n         celular: Yup.number()\r\n                      .min(1, 'Debes agregar un número de celular')\r\n                      .required('el celular es obligatorio'), \r\n         \r\n                      \r\n      }),\r\n      onSubmit: datos => {\r\n        \r\n              console.log(datos);\r\n        \r\n      }\r\n   });\r\n       return( \r\n        <>\r\n         <h1 className=\"text-3xl font-light mb-4\">nuevo usuario</h1>\r\n         <div className=\"flex justify-center mt-10\">\r\n                <div className=\"w-full max-w-3xl\">\r\n                    <form\r\n                        onSubmit={formik.handleSubmit}\r\n                    >\r\n                         <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"precio\">ID</label>\r\n                            <input \r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                id=\"id\"\r\n                                type=\"number\"\r\n                                placeholder=\"1\"\r\n                                min=\"0\"\r\n                                value={formik.values.id}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                            />\r\n                        </div>\r\n                        { formik.touched.id && formik.errors.id ? (\r\n                            <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\" role=\"alert\">\r\n                                <p className=\"font-bold\">Hubo un error:</p>\r\n                                <p>{formik.errors.id} </p>\r\n                            </div>\r\n                        ) : null }\r\n\r\n\r\n\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"precio\">Identificación</label>\r\n                            <input \r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                id=\"identificacion\"\r\n                                type=\"number\"\r\n                                placeholder=\"1\"\r\n                                min=\"0\"\r\n                                value={formik.values.identificacion}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                            />\r\n                        </div>\r\n\r\n                        { formik.touched.identificacion && formik.errors.identificacion ? (\r\n                            <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\" role=\"alert\">\r\n                                <p className=\"font-bold\">Hubo un error:</p>\r\n                                <p>{formik.errors.identificacion} </p>\r\n                            </div>\r\n                        ) : null }\r\n                        \r\n                        \r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"nombre\">Nombre</label>\r\n                            <input \r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                id=\"nombre\"\r\n                                type=\"text\"\r\n                                placeholder=\"Nombre Platillo\"\r\n                                value={formik.values.nombre}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                            />\r\n                        </div>\r\n                        { formik.touched.nombre && formik.errors.nombre ? (\r\n                            <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\" role=\"alert\">\r\n                                <p className=\"font-bold\">Hubo un error:</p>\r\n                                <p>{formik.errors.nombre} </p>\r\n                            </div>\r\n                        ) : null }\r\n\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"precio\">Celular</label>\r\n                            <input \r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                id=\"celular\"\r\n                                type=\"number\"\r\n                                placeholder=\"0\"\r\n                                min=\"0\"\r\n                                value={formik.values.celular}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                            />\r\n                        </div>\r\n\r\n                        { formik.touched.celular && formik.errors.celular ? (\r\n                            <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\" role=\"alert\">\r\n                                <p className=\"font-bold\">Hubo un error:</p>\r\n                                <p>{formik.errors.celular} </p>\r\n                            </div>\r\n                        ) : null }\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"nombre\">Zona</label>\r\n                            <select\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                id=\"zona\"\r\n                                name=\"zona\"\r\n                                value={formik.values.zona}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                            >\r\n                                <option value=\"\">-- Seleccione --</option>\r\n                                <option value=\"ZONA 1\">ZONA 1</option>\r\n                                <option value=\"ZONA 2\">ZONA 2</option>\r\n                              \r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                        { formik.touched.zona && formik.errors.zona ? (\r\n                            <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\" role=\"alert\">\r\n                                <p className=\"font-bold\">Hubo un error:</p>\r\n                                <p>{formik.errors.zona} </p>\r\n                            </div>\r\n                        ) : null }\r\n\r\n\r\n                  \r\n\r\n\r\n\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"bg-gray-800 hover:bg-gray-900 w-full mt-5 p-2 text-white uppercase font-bold\"\r\n                            value=\"Agregar Usuario\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default NuevoUsuario;","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nconst NuevaOrden = () => {\r\n\r\n     // validación y leer los datos del formulario\r\n     const formik = useFormik({\r\n      initialValues: {\r\n          nombre: '',\r\n          precio: '',\r\n          categoria: '',\r\n          imagen: '',\r\n          descripcion: '',\r\n      }, \r\n      validationSchema: Yup.object({\r\n          nombre: Yup.string()\r\n                      .min(3, 'Los Platillos deben tener al menos 3 caracteres')\r\n                      .required('El Nombre del platillo es obligatorio'),\r\n          precio: Yup.number()\r\n                      .min(1, 'Debes agregar un número')\r\n                      .required('El Precio es obligatorio'),\r\n          categoria: Yup.string()\r\n                      .required('La categoría es obligatoria'),\r\n          descripcion: Yup.string()\r\n                      .min(10, 'La descripción debe ser más larga')\r\n                      .required('La descripción es obligatoria'),\r\n                      \r\n      }),\r\n      onSubmit: datos => {\r\n        \r\n              console.log(datos);\r\n        \r\n      }\r\n  });\r\n       return( \r\n      <>\r\n            <h1 className=\"text-3xl font-light mb-4\">Agregar Platillo</h1>\r\n\r\n            <div className=\"flex justify-center mt-10\">\r\n                <div className=\"w-full max-w-3xl\">\r\n                    <form\r\n                        onSubmit={formik.handleSubmit}\r\n                    >\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"nombre\">Nombre</label>\r\n                            <input \r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                id=\"nombre\"\r\n                                type=\"text\"\r\n                                placeholder=\"Nombre Platillo\"\r\n                                value={formik.values.nombre}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                            />\r\n                        </div>\r\n                        { formik.touched.nombre && formik.errors.nombre ? (\r\n                            <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\" role=\"alert\">\r\n                                <p className=\"font-bold\">Hubo un error:</p>\r\n                                <p>{formik.errors.nombre} </p>\r\n                            </div>\r\n                        ) : null }\r\n\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"precio\">Precio</label>\r\n                            <input \r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                id=\"precio\"\r\n                                type=\"number\"\r\n                                placeholder=\"$20\"\r\n                                min=\"0\"\r\n                                value={formik.values.precio}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                            />\r\n                        </div>\r\n\r\n                        { formik.touched.precio && formik.errors.precio ? (\r\n                            <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\" role=\"alert\">\r\n                                <p className=\"font-bold\">Hubo un error:</p>\r\n                                <p>{formik.errors.precio} </p>\r\n                            </div>\r\n                        ) : null }\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"nombre\">Categoría</label>\r\n                            <select\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                id=\"precio\"\r\n                                name=\"categoria\"\r\n                                value={formik.values.categoria}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                            >\r\n                                <option value=\"\">-- Seleccione --</option>\r\n                                <option value=\"desayuno\">Desayuno</option>\r\n                                <option value=\"comida\">Comida</option>\r\n                                <option value=\"cena\">Cena</option>\r\n                                <option value=\"bebida\">Bebidas</option>\r\n                                <option value=\"postre\">Postre</option>\r\n                                <option value=\"ensalada\">Ensalada</option>\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                        { formik.touched.categoria && formik.errors.categoria ? (\r\n                            <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\" role=\"alert\">\r\n                                <p className=\"font-bold\">Hubo un error:</p>\r\n                                <p>{formik.errors.categoria} </p>\r\n                            </div>\r\n                        ) : null }\r\n\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"imagen\">Imagen</label>\r\n                          \r\n                        </div>\r\n\r\n                     \r\n\r\n                   \r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"descripcion\">Descripción</label>\r\n                            <textarea \r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline h-40\"\r\n                                id=\"descripcion\"\r\n                                placeholder=\"Descripción del Platillo\"\r\n                                value={formik.values.descripcion}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                            ></textarea>\r\n                        </div>\r\n\r\n                        { formik.touched.descripcion && formik.errors.descripcion ? (\r\n                            <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-5\" role=\"alert\">\r\n                                <p className=\"font-bold\">Hubo un error:</p>\r\n                                <p>{formik.errors.descripcion} </p>\r\n                            </div>\r\n                        ) : null }\r\n\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"bg-gray-800 hover:bg-gray-900 w-full mt-5 p-2 text-white uppercase font-bold\"\r\n                            value=\"Agregar Platillo\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default NuevaOrden;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Sidebar = () => {\r\n       return( \r\n        <div className=\"md:w-2/6 xl:w-1/5 bg-gray-800\">\r\n            <div className=\"p-6\">\r\n                <p className=\"uppercase text-white text-2xl tracking-wide text-center font-bold\">Tutoria App</p>\r\n\r\n                <p className=\"mt-3 text-gray-600\">Administra tu empresa en las siguientes opciones:</p>\r\n\r\n                <nav className=\"mt-10\">\r\n                    <NavLink className=\"p-1 text-gray-400 block hover:bg-yellow-500 hover:text-gray-900\" activeClassName=\"text-yellow-500\" exact=\"true\" to=\"/\">Ordenes</NavLink>\r\n                    <NavLink className=\"p-1 text-gray-400 block hover:bg-yellow-500 hover:text-gray-900\" activeClassName=\"text-yellow-500\" exact=\"true\" to=\"/productos\">Productos</NavLink>\r\n                    <NavLink className=\"p-1 text-gray-400 block hover:bg-yellow-500 hover:text-gray-900\" activeClassName=\"text-yellow-500\" exact=\"true\" to=\"/usuarios\">Usuarios</NavLink>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Sidebar;","import React from \"react\";\nimport { Routes, Route } from 'react-router';\nimport Ordenes from './components/paginas/Ordenes';\nimport Usuarios from './components/paginas/Usuarios';\nimport Productos from './components/paginas/Productos';\nimport NuevoProducto from './components/paginas/NuevoProducto';\nimport NuevoUsuario from './components/paginas/NuevoUsuario';\nimport NuevaOrden from './components/paginas/NuevaOrden';\nimport Sidebar from './components/ui/Sidebar';\n\nfunction App() {\n  return (\n    <div className=\"md:flex min-h-screen\">\n      <Sidebar />\n     \n      <div className=\"md:w-2/5 xl:w-4/5 p-6\">\n            <Routes>\n                <Route path=\"/\" element={<Ordenes />  } />\n                <Route path=\"/usuarios\" element={<Usuarios />  } />\n                <Route path=\"/productos\" element={<Productos />  } />\n                <Route path=\"/nuevo-producto\" element={<NuevoProducto />  } />\n                <Route path=\"/nuevo-usuario\" element={<NuevoUsuario />  } />\n                <Route path=\"/nueva-orden\" element={<NuevaOrden />  } />\n            </Routes>\n          </div>\n          </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/main.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n  <App />\n</Router>, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}